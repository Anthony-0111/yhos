#!/usr/bin/bash
##
## yhOS
## Copyright (c) aceinet
## License: GPL-2.0
##
set -e

echo "generating makefile"
dcc_found="0"

echo -n "checking for dcc... "
if which dcc >/dev/null; then
	dcc_found="1"
fi

if [ "$FORCE_DCC" == "1" ]; then
	dcc_found="1"
fi

if [ "$dcc_found" == "1" ]; then
	echo "dcc"

	echo -n "checking for llc... "
	if type llc &> /dev/null; then
		echo "llc"
	else
		echo "none"
		echo "error: cannot proceed without llc"
		
		exit 1
	fi
else
	echo "none"
fi

echo -n "checking for clang... "
if clang -v &> /dev/null; then
	echo "clang"
else
	echo "none"
	echo "error: cannot proceed without clang"
	exit 1
fi

echo -n "checking for clang++... "
if clang++ -v &> /dev/null; then
	echo "clang++"
else
	echo "none"
	echo "warning: you can proceed without clang++, but you probably wouldn't be able to compile the ROM"
fi

echo -n "checking for ld.lld... "
if i386-elf-ld -v &> /dev/null; then
	echo "ld.lld"
else
	echo "none"
	echo "error: cannot proceed without ld.lld"
	exit 1
fi

echo -n "checking for nasm... "
if nasm -v &> /dev/null; then
	echo "nasm"
else
	echo "none"
	echo "error: cannot proceed without nasm"
	exit 1
fi

echo -n "checking for fasm... "
if type fasm &> /dev/null; then
	echo "fasm"
else
	echo "none"
	echo "error: cannot proceed without fasm"
	exit 1
fi

if [ -f Makefile ]; then
	rm Makefile
fi

if [ ! -f .Makefile ]; then
	echo "makefile template does not exist. cannot continue"
	exit 1
fi

# check if kernel/rom.h exists, then the kernel can use it checking for ROM_EXISTS definition
cflags="CFLAGS = -I. -Werror -Wall -Wextra -DGIT_COMMIT='\"\$(GIT_COMMIT)\"'"
romfile=""
makegen_deps=""
echo -n "checking for kernel/rom.h... "
if [ ! -f kernel/rom.h ]; then
	cflags="${cflags}"
	echo "none"
else
	cflags="${cflags} -DROM_EXISTS"
	romfile="kernel/rom.h"
	echo "kernel/rom.h"
fi

if [ "$dcc_found" == "1" ]; then
	cflags="${cflags} -DDCC_EXISTS"
	makegen_deps="${makegen_deps} build/dc_test.o"
else
	cflags="${cflags}"
fi

echo ${cflags} >> Makefile
echo "ROMFILE = ${romfile}" >> Makefile
echo "MAKEGEN_DEPS =${makegen_deps}" >> Makefile
cat .Makefile >> Makefile

if [ "$dcc_found" == "1" ]; then
	echo "" >> Makefile
	echo "build/dc_test.o: build/dc_test.ll" >> Makefile
	echo "	\$(dir_guard)" >> Makefile
	echo "	\$(DCC_COLOR)" >> Makefile
	echo "	\$(LLC) build/dc_test.ll -o build/dc_test.o -march=x86 -filetype=obj" >> Makefile
	echo "	\$(RESET_COLOR)" >> Makefile
	echo "" >> Makefile
	echo "build/dc_test.ll: kernel/dc_test.dc" >> Makefile
	echo "	\$(dir_guard)" >> Makefile
	echo "	\$(DCC_COLOR)" >> Makefile
	echo "	\$(DCC) kernel/dc_test.dc -i -o build/dc_test --nostdlib" >> Makefile
	echo "	\$(RESET_COLOR)" >> Makefile
fi

echo "generated successfully"
